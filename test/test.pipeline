
pipeline {   
  agent any
  stages{
      stage("Hello stage") {           
          steps { 
              script {
                def verifyCall = load("/home/myeung/git/cicdutils/vars/verify.groovy")
                verifyCall("Please verify this call.")
              
              }
          }       
      }
  }
}


//calling local class
pipeline {   
  agent any
  stages{
      stage ("source") {
          steps {
            echo 'testing to call groovy class in local machine.' 
          }
      }
      stage("Loading stage") {           
          steps { 
              script {
                def classCall = load("/home/myeung/git/cicdutils/src/com/openshift/util/CicdUtils.groovy")
                classCall.gBuild(this, "Please verify this call.")
              }

          }       
      }
  }
}


/*************calling with environment and parameters **************/
@Library('cicdutils@master')_

pipeline {   
  agent any
  parameters {
    string(name:'UserId', defaultValue:'-userId value-', description: 'used for testing')
  }
  environment {
    TIMEZONE = "eastern"
  }
  stages{
      stage ("source") {
          steps {
            echo 'testing to call groovy class in local machine: ${params.UserId} ${TIMEZONE}' 
          }
      }
      stage("Loading stage") {           
          steps { 
              script {
                def classCall = load("/home/myeung/git/cicdutils/src/com/openshift/global/util/Tester.groovy")
                classCall("Please verify this Tester call.", this)

              }
          }       
      }
  }
}

