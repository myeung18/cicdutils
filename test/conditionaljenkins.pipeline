pipeline {
    agent any
    tools {
        maven 'maven-3'
        jdk 'jdk1.8.0'
        oc 'oc'
    }
    parameters{ 
        choice (
            choices: ['fisuser','maingateway','fisalert','ui','all'],
            description: 'supported modules',
            name: 'DEPLOY_MODULE')
        string (defaultValue: 'token', name:'os_token', description:'open shift token')
    }
    environment { 
        openShiftHost = 'https://master.rhdp.ocp.cloud.lab.eng.bos.redhat.com:8443'
        openShiftToken = '_km-0ze-iwrZ-AxuljO9HYB5NBkEYOcpR07oWs-Hh2c'
    }    
    stages {
        stage ("source") {
            steps {
                git 'https://github.com/myeung18/3ScaleFuseAMQ'
            }
        }
       stage('Build maingateway-service') {
            environment { 
                serviceName = 'maingateway-service'
                projectName = 'rh-dev'
            }
            when {
                expression {
                    params.DEPLOY_MODULE == 'maingateway' || params.DEPLOY_MODULE == 'all'
                }
            }
            steps {
                echo "Building.. ${serviceName} "

                echo "Deploying ${serviceName} to ${projectName}"

            }
        }
        stage('Build fisuser') {
            environment { 
                serviceName = 'fisuser-service'
            }
            when { 
                expression {
                    params.DEPLOY_MODULE == 'fisuser' || params.DEPLOY_MODULE == 'all'
                }
            }
            steps {
                echo "Building.. this service name is:  $serviceName  "   
                sh ''' echo dev coding ''' 
                
                sh '''  
                 echo 'calling method'
                '''
                buildAndDeploy('directory', env.serviceName, env.openShiftHost, env.openShiftToken)
            }
        }
        stage('Pushing to Test') {
            environment {
                projectName = 'rh-test'
                imageNameSpace = 'rh-dev'
                srcTag = 'latest'
                destTag = 'promoteTest'
                serviceName = 'maingateway-service'
            }
            when {
                expression {
                    params.DEPLOY_MODULE == 'maingateway' || params.DEPLOY_MODULE == 'all'
                }
            }
            steps {
                echo "Deployment to ${projectName} "
            }
        }
        stage('Pushing to UAT') {
            steps {
                echo 'Deploying....'
            }
        }
    }
}



def buildAndDeploy(dirName, srvName, openshiftHost, openshiftToken) {
    sh """
        echo dirName: ${dirName} - ${srvName}  - ${openshiftHost} - ${openshiftToken}
    """
}
